package org.ext4spring.parameter.converter.tv;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import org.ext4spring.parameter.converter.Converter;
import org.ext4spring.parameter.exception.ParameterConverterException;

/**
 * Simple converter uses .toString and .valueOf for conversion
 * Can convert any class that match the following criteria:
 * -Has a String constructor or has a valueOf(String) method that creates an instance from a String
 * -The string generated by .toString can passed to the constructor or the valueOf method to create the object.
 * @author pborbas
 *
 */
public class TVConverter implements Converter {

    @Override
    public Class<?> getHandledClass() {
        return Object.class;
    }

    @Override
    public <T> T toTypedValue(String stringValue, Class<T> type) {
        if (stringValue==null || stringValue.equalsIgnoreCase("null")) {
            return null;
        }
        try {
            try {
                //with string constructor
                Constructor<T> constructor=type.getConstructor(String.class);
                T typedValue=constructor.newInstance(stringValue);
                return typedValue;
            } catch (NoSuchMethodException e) {
                //with noarg constructor and valueof
                T typedValue=type.newInstance();
                Method method=type.getMethod("valueOf", String.class);
                method.invoke(typedValue, stringValue);
                return typedValue;
           }
        } catch (InstantiationException e) {
           throw new ParameterConverterException("Error while converting value to object:"+stringValue, e);
        } catch (IllegalAccessException e) {
            throw new ParameterConverterException("Error while converting value to object:"+stringValue, e);
        } catch (SecurityException e) {
            throw new ParameterConverterException("Error while converting value to object:"+stringValue, e);
        } catch (NoSuchMethodException e) {
            throw new ParameterConverterException("Error while converting value to object:"+stringValue, e);
        } catch (IllegalArgumentException e) {
            throw new ParameterConverterException("Error while converting value to object:"+stringValue, e);
        } catch (InvocationTargetException e) {
            throw new ParameterConverterException("Error while converting value to object:"+stringValue, e);
        }
    }

    @Override
    public String toStringValue(Object typedValue) {
        if (typedValue==null) {
            return null;
        }
        return typedValue.toString();
    }

    public static void main(String[] args) {
        TVConverter tvConverter=new TVConverter();
        tvConverter.toStringValue(tvConverter.toStringValue(new String("string")));
    }
}
